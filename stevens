ste <- stevens
names(ste)
library(caTools)
set.seed(3000)
spl <- sample.split(ste$Reverse,SplitRatio = 0.7)
train <- subset(ste,spl==T)
test <- subset(ste,spl==F)
library(rpart.plot)
stetree <- rpart(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data = train, method = "class",minbucket=25)
prp(stetree)
pre <- predict(stetree, newdata = test, type = "class")
table(test$Reverse,pre)
library(ROCR)
predictROC <- predict(stetree,newdata = test)
predictROC
pred <- prediction(predictROC[,2],test$Reverse)
perf <- performance(pred,"tpr","fpr")
plot(perf)
as.numeric(performance(pred,"auc")@y.values)
library(randomForest)
train$Reverse <- as.factor(train$Reverse)
test$Reverse <- as.factor(test$Reverse)
steFor <- randomForest(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst,data = train,nodesize=25,ntree=200)
preFor <- predict(steFor,newdata = test)
table(test$Reverse,preFor)
library(caret)
library(e1071)
numFolds=trainControl(method = "cv",number = 10)
cpGrid <- expand.grid(.cp=seq(0.01,0.5,0.01)) 
train(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst,data=train,method="rpart",trControl=numFolds,tuneGrid=cpGrid)
stetreecv <- rpart(Reverse~Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst,data=train,method="class",cp=0.18)
predictCV <- predict(stetreecv,newdata=test,type="class")
table(test$Reverse,predictCV)
prp(stetreecv)
